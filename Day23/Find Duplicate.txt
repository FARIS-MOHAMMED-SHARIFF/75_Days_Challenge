class Solution {
    public int findDuplicate(int[] nums) {
        int fast = nums[0];
        int slow = nums[0];
        do{
            slow = nums[slow];
            fast = nums[nums[fast]];
            }while(fast!=slow);
        
        fast=nums[0];
        
        while(slow!=fast)
        {
            slow = nums[slow];
            fast = nums[fast];
        }
        
        return fast;
        
    }
}
        
//         int i = 0;
//         while(i < nums.length)
//         {
//             if(nums[i] != i+1)
//             {
//                 int correct = nums[i] - 1;
//                 if(nums[i] != nums[correct])
//                     swap(i,correct,nums);
//                 else 
//                     return nums[i];
//             }
//             else
//                 i++;
//         }
//         return -1;
//     }
//     public void swap(int i , int j, int nums[])
//     {
//         int temp = nums[i];
//         nums[i] = nums[j];
//         nums[j] = temp;
//     }
// }
